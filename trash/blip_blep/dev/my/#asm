#asm

	._embellishment_processor
		xor a
		ld  (_gpit), a

	._mcd_ep_outter_loop
		ld  bc, (_gpit)
		ld  b, 0
		ld  hl, _map_attr
		ld  a, (hl)
		ld  (__t), a

		ld  hl, _embellishments
	._mcd_ep_inner_loop
		ld  a, (hl)
		cp  0xff
		jr  z, _mcd_ep_continue

		ld  c, a
		ld  a, (__t)
		cp  c
		jr  nz, _mcd_ep_next

		inc hl
		
		ld  a, (hl)
		ld  c, a
		ld  (__rdc), a 		// Command
		inc hl

		ld  a, (hl)
		ld  (__rdd), a 		// Parameter
		inc hl

		ld  a, (hl)
		ld  (__rdn), a 		// Substitute
		inc hl

		// Above/Below or same?
		ld  a, c
		and 2
		jr  z, _mcd_ep_check_same
	
		ld  a, c
		and 4
		jr  z, _mcd_ep_check_above

	._mcd_ep_check_below
		ld  a, (_gpit)
		cp  135
		jr  nc, _mcd_ep_inner_loop 	// Does not apply. Next.

		add 15
		jr  _mcd_ep_docheck

	._mcd_ep_check_above
		ld  a, (_gpit)
		cp  15
		jr  c, _mcd_ep_inner_loop	// Does not apply. Next.

		sub 15

	._mcd_ep_docheck
		ld  d, 0
		ld  e, a
		ld  hl, _map_attr
		add hl, de
		ld  a, (hl)		
		
		ld  b, a 					// Save temp. to B
		ld  a, c
		and 1
		jr  z, _mcd_ep_docheck_equal

	._mcd_ep_docheck_not_equal
		ld  a, (__rdd) 				// Parameter
		cp  b 						// Saved
		jr  z, _mcd_ep_inner_loop	// Does not apply. Next.
		jr  _mcd_ep_check_same

	._mcd_ep_docheck_equal
		ld  a, (__rdd) 				// Parameter
		cp  b 						// Saved
		jr  nz, _mcd_ep_inner_loop	// Does not apply. Next.

	._mcd_ep_check_same
		ld  a, (__rdn) 				// Substitute

		ld  b, a 					// Save temp. to B
		and 0xc0 					// Bit mask
		ld  a, b
		jr  z, _mcd_ep_set

		and 0x3f
		ld  (_rda), a
		
		call rand 					// -> L

		ld  a, (_rda)
		srl a
		srl a
		srl a
		srl a
		srl a
		srl a
		ld  b, a
		ld  a, l
		and b

	._mcd_ep_set		
		ld  (__t), a 				// Do
		jr  _mcd_ep_continue 		// And don't iterate further.


	._mcd_ep_next
		ld  bc, 4
		add hl, bc
		jp  _mcd_ep_inner_loop


	._mcd_ep_continue
		ld  bc, (_gpit)
		ld  b, 0
		ld  hl, _map_buff
		add hl, bc
		ld  a, (__t)
		ld  (hl), a

		ld  a, c
		inc a
		ld  (_gpit), a
		cp  150
		jp  nz, _mcd_ep_outter_loop

#endasm
